@startuml swarch
' !pragma layout smetanas

title Dependencies

package "Application Layer" as AL {
    package States <<rectangle>>{
        abstract State {
            context : Context
            void run()
        }
        class SetupState 
        class TrackingState
        class Context {
            void transition_to(state: State)
            void update(camera) # type can be a webots-camera or real-camera
        }
    }
    class Scene
    class FoundObject
    class FoundObjectMaster
    class Tracker
    class "SpaceShipRadar" #PaleGreen
    class HistogramStar
}

package "Service Layer" as SL {

    class BackgroundManager
    class Helper
    class Drawer
    class PathGovernor
    class ImageGetter
    class ObjectFinder

    class ArAuthority
    class Transformer
}

    class VideoChef
    class Os #SkyBlue
    class "Robot" #pink
    class OpenCV #pink

Scene o-- FoundObjectMaster
Scene o-- BackgroundManager
Scene o-- ArAuthority

FoundObject ..> Helper

FoundObjectMaster *-- "*" FoundObject
FoundObjectMaster ..> HistogramStar
FoundObjectMaster ..> OpenCV

Drawer ..> OpenCV

BackgroundManager ..> PathGovernor
BackgroundManager ..> OpenCV

ImageGetter ..> VideoChef
ImageGetter ..> OpenCV
ImageGetter ..> Robot

ObjectFinder ..> OpenCV

PathGovernor .> Os

VideoChef ..> PathGovernor
VideoChef ..> OpenCV

"State" .> Context
Context .> "State"

SetupState ..> Tracker
SetupState .r.> TrackingState
"State" <|-- SetupState

TrackingState ..> Tracker
"State" <|-- TrackingState

Tracker ..> Scene
Tracker ..> ImageGetter
Tracker ..> ObjectFinder
Tracker ..> Drawer
Tracker ..> OpenCV
Tracker ..> Transformer

HistogramStar ..> PathGovernor
HistogramStar ..> OpenCV

SpaceShipRadar ..> OpenCV
SpaceShipRadar ..> Robot
' SpaceShipRadar ..> ImageGetter
SpaceShipRadar .> Context
SpaceShipRadar .u.> SetupState

ArAuthority ..> OpenCV

Transformer ..> OpenCV

note right of Robot
Class provided by Webots
end note

@enduml